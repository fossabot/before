{"version":3,"sources":["utils.js","components/Slide.js","components/CalendarGrid.js","pages/Explore.js","pages/NotFound.js","App.js","components/DarkMode.js","serviceWorker.js","webpack:///./src/index.js?b635","assets/cat-in-space.svg","components/CalendarGrid.module.css"],"names":["daysInYearByWeek","year","dates","startDate","endDate","currDate","moment","startOf","lastDate","add","diff","push","clone","enumerateDaysBetweenDates","toString","datesByWeek","week_","week_group","date","week","length","firstWeek","unshift","lastWeek","slice","Slide","selectedDate","absoluteEarliestDate","absoluteLatestDate","yesterday","tomorrow","selectedRepos","dayToggleStyle","dayToggleHover","linkHover","className","isAfter","style","width","height","onClick","format","isBefore","map","repo","index","key","daily_rank","href","url","target","rel","title","objectID","points","alt","src","NoRepos","CalendarGrid","history","useHistory","location","useLocation","params","queryString","parse","search","maxYear","isValid","useState","_setSelectedDate","selectedYear","setSelectedYear","changeYear","increment","targetYear","minYear","month","selectedDateRef","React","useRef","setSelectedDate","current","gridClick","event","parseInt","dataset","incrementDay","targetDate","handlers","TOMORROW","YESTERDAY","NEXT_WEEK","LAST_WEEK","keyAesthetics","keyStyle","yearToggleStyle","yearToggleHover","dateKey","selectedHackernews","hackernewsDaily","keyMap","outline","effect","Styles","tooltip","offset","top","margin","weekIndex","dateIndex","isSameDay","isSame","weekOfMonth","padding","backgroundColor","opacity","data-date","data-tip","undefined","position","marginLeft","day","marginTop","Explore","NotFound","App","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localStorage","setItem","useEffect","localTheme","getItem","matchMedia","matches","useDarkMode","toggleTheme","document","documentElement","classList","remove","marginBottom","onChange","checked","size","speed","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.4ba39cc7.chunk.js","sourcesContent":["import moment from 'moment';\n\n\nexport const enumerateDaysBetweenDates = (startDate, endDate) => {\n  let dates = [];\n\n  let currDate = moment(startDate).startOf('day');\n  let lastDate = moment(endDate).startOf('day');\n\n  while (currDate.add(1, 'days').diff(lastDate) < 0) {\n    dates.push(currDate.clone());\n  }\n\n  return dates;\n};\n\n\nexport const daysInYearByWeek = (year) => {\n  const DATE_FORMAT = 'YYYYMMDD';\n\n  let startDate = moment((year - 1).toString() + '1231', DATE_FORMAT);\n  let endDate = moment((year + 1).toString() + '0101', DATE_FORMAT);\n\n  let dates = enumerateDaysBetweenDates(startDate, endDate);\n\n  let datesByWeek = [];\n\n  let week_ = 1;\n  let week_group = [];\n\n  for (const date of dates) {\n    if (week_ !== date.week()) {\n      datesByWeek.push(week_group);\n      week_group = [];\n      week_ = date.week();\n    }\n    week_group.push(date);\n  }\n\n  if (week_group.length > 0) {\n    datesByWeek.push(week_group);\n  }\n\n  const firstWeek = datesByWeek[0];\n\n  while (firstWeek.length < 7) {\n    firstWeek.unshift(firstWeek[0].clone().add(-1, 'days'));\n  }\n\n  const lastWeek = datesByWeek.slice(-1)[0];\n\n  while (lastWeek.length < 7) {\n    lastWeek.push(lastWeek.slice(-1)[0].clone().add(1, 'days'));\n  }\n\n  return datesByWeek;\n};\n","import React from 'react';\n\nimport moment from 'moment';\n\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi';\nimport { FaHackerNewsSquare } from 'react-icons/fa';\n\nimport NoRepos from '../assets/cat-in-space.svg';\n\nconst Slide = ({\n\tselectedDate,\n\tabsoluteEarliestDate,\n\tabsoluteLatestDate,\n\tyesterday,\n\ttomorrow,\n\tselectedRepos,\n}) => {\n\t// slide styles\n\tconst slideAesthetics = 'shadow-2xl bg-white rounded-lg px-8 py-6';\n\tconst slideDark = 'dark:bg-gray-800 dark:text-gray-200';\n\tconst slideTransition = 'transition ease-in duration-150';\n\tconst slideSizing = 'sm:w-3/4 md:w-3/4 lg:w-3/4';\n\n\t// day toggler styles\n\tconst dayToggleAesthetics = 'rounded p-2';\n\tconst dayTogglePosition = 'align-middle';\n\tconst dayToggleTransition = 'transition ease-in duration-200';\n\tconst dayToggleStyle = `${dayToggleAesthetics} ${dayTogglePosition} ${dayToggleTransition}`;\n\tconst dayToggleHover =\n\t\t'cursor-pointer hover:bg-gray-300 dark-hover:bg-gray-600';\n\n\t// general link hover style\n\tconst linkHover = `hover:text-blue-600 dark-hover:text-orange-500`;\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center w-screen pt-12 pb-12\">\n\t\t\t<div\n\t\t\t\tclassName={`max-w-screen-md ${slideAesthetics} ${slideDark} ${slideTransition} ${slideSizing}`}>\n\t\t\t\t<div className=\"flex justify-center items-center text-lg pb-3\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${dayToggleStyle} ${\n\t\t\t\t\t\t\tmoment(selectedDate).add(-1, 'days').isAfter(absoluteEarliestDate)\n\t\t\t\t\t\t\t\t? dayToggleHover\n\t\t\t\t\t\t\t\t: 'text-transparent'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tstyle={{ width: 'max-content', height: 'max-content' }}\n\t\t\t\t\t\tonClick={yesterday}>\n\t\t\t\t\t\t<HiOutlineChevronLeft />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"align-middle select-none mx-1 text-center shadow-inner py-1 px-2 rounded bg-gray-200 dark:bg-gray-700\"\n\t\t\t\t\t\tstyle={{ width: 'max-content' }}>\n\t\t\t\t\t\t{moment(selectedDate).format('MMMM Do, YYYY')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${dayToggleStyle} ${\n\t\t\t\t\t\t\tmoment(selectedDate).add(1, 'days').isBefore(absoluteLatestDate)\n\t\t\t\t\t\t\t\t? dayToggleHover\n\t\t\t\t\t\t\t\t: 'text-transparent'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tstyle={{ width: 'max-content', height: 'max-content' }}\n\t\t\t\t\t\tonClick={tomorrow}>\n\t\t\t\t\t\t<HiOutlineChevronRight />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{selectedRepos ? (\n\t\t\t\t\t\tselectedRepos.map((repo, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"flex py-2\" key={index}>\n\t\t\t\t\t\t\t\t\t<div className=\"w-1/12 select-none\">{repo.daily_rank}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"w-5/6 mr-3\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${linkHover}`}\n\t\t\t\t\t\t\t\t\t\t\thref={repo.url}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{repo.title}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"w-1/12 mx-auto text-xl\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tclassName={`w-1/4 ${linkHover}`}\n\t\t\t\t\t\t\t\t\t\t\thref={`https://news.ycombinator.com/item?id=${repo.objectID}`}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded border-solid border-2 border-gray-400 h-auto flex\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 'fit-content' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FaHackerNewsSquare />\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm px-1\">{repo.points}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"text-center w-full\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\talt=\"No repos found.\"\n\t\t\t\t\t\t\t\tclassName=\"py-2 w-1/2 m-auto select-none\"\n\t\t\t\t\t\t\t\tsrc={NoRepos}></img>\n\t\t\t\t\t\t\t<div className=\"select-none\">No repos found.</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Slide;\n","import React, { useState } from 'react';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport ReactTooltip from 'react-tooltip';\n\nimport { daysInYearByWeek } from '../utils';\n\nimport moment from 'moment';\n\nimport Slide from './Slide';\nimport Styles from './CalendarGrid.module.css';\n\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport hackernewsDaily from '../assets/hackernews_github.json';\n\nconst DATE_KEY_FORMAT = 'YYYY-MM-DD';\n\nconst CalendarGrid = () => {\n  let history = useHistory();\n  let location = useLocation();\n  let params = queryString.parse(location.search);\n\n  // year bounds\n  const minYear = 2008;\n  const maxYear = moment().year();\n\n  let date = params.date;\n\n  if (date) {\n    date = moment(date, DATE_KEY_FORMAT);\n    if (!date.isValid()) {\n      date = moment();\n      history.push(`/before?date=${date.format(DATE_KEY_FORMAT)}`);\n    }\n  } else {\n    date = moment();\n    history.push(`/before?date=${date.format(DATE_KEY_FORMAT)}`);\n  }\n\n  // current date to display\n  const [selectedDate, _setSelectedDate] = useState(date);\n\n  // year to display\n  const [selectedYear, setSelectedYear] = useState(selectedDate.year());\n\n  // year incrementers\n  const changeYear = (increment) => {\n    let targetYear = selectedYear + increment;\n\n    if (targetYear >= minYear && targetYear <= maxYear) {\n      setSelectedYear(selectedYear + increment);\n    }\n  };\n\n  const lastYear = () => {\n    if (selectedYear > minYear) {\n      setSelectedDate(selectedDate.clone().add(-1, 'years'));\n      changeYear(-1);\n    }\n  };\n\n  const nextYear = () => {\n    if (selectedYear < maxYear) {\n      setSelectedDate(selectedDate.clone().add(1, 'years'));\n      changeYear(1);\n    }\n  };\n\n  // dates for grid\n  let datesByWeek = daysInYearByWeek(selectedYear);\n\n  // absolute grid bounds\n  let absoluteEarliestDate = moment({ year: minYear - 1, month: 11, date: 31 });\n  let absoluteLatestDate = moment({ year: maxYear + 1, month: 0, date: 1 });\n\n  // use ref to for handlers and URL\n  const selectedDateRef = React.useRef(selectedDate);\n  const setSelectedDate = (date) => {\n    selectedDateRef.current = date;\n    _setSelectedDate(date);\n    history.push(`/before?date=${date.format(DATE_KEY_FORMAT)}`);\n  };\n\n  // change date on cell click\n  const gridClick = (event) => {\n    const date = moment(parseInt(event.target.dataset.date));\n\n    setSelectedDate(date.clone());\n  };\n\n  // general date incrementer\n  const incrementDay = (increment) => {\n    let targetDate = selectedDateRef.current.clone();\n\n    targetDate.add(increment, 'days');\n\n    if (\n      targetDate.isAfter(absoluteEarliestDate) &&\n      targetDate.isBefore(absoluteLatestDate)\n    ) {\n      setSelectedYear(targetDate.year());\n      setSelectedDate(targetDate);\n    }\n  };\n\n  // date increments for keys\n  const tomorrow = () => {\n    incrementDay(1);\n  };\n\n  const nextWeek = () => {\n    incrementDay(7);\n  };\n\n  const yesterday = () => {\n    incrementDay(-1);\n  };\n\n  const prevWeek = () => {\n    incrementDay(-7);\n  };\n\n  const keyMap = {\n    TOMORROW: ['s'],\n    YESTERDAY: ['w'],\n    NEXT_WEEK: ['d'],\n    LAST_WEEK: ['a'],\n  };\n\n  const handlers = {\n    TOMORROW: tomorrow,\n    YESTERDAY: yesterday,\n    NEXT_WEEK: nextWeek,\n    LAST_WEEK: prevWeek,\n  };\n\n  // grid styles\n  const gridSizing = 'w-4 h-4 rounded';\n  const gridTransition = 'transition ease-in duration-200';\n  const gridDisabled = 'bg-transparent cursor-default';\n\n  // key styles\n  const keyAesthetics =\n    'inline text-center font-mono rounded pt-1 pb-1 px-2 shadow-sm text-xs bg-gray-400 dark:bg-gray-800';\n  const keyStyle = { width: 'max-content' };\n\n  // year toggler styles\n  const yearToggleAesthetics = 'rounded p-2';\n  const yearTogglePosition = 'inline align-middle';\n  const yearToggleTransition = 'transition ease-in duration-200';\n  const yearToggleStyle = `${yearToggleAesthetics} ${yearTogglePosition} ${yearToggleTransition}`;\n  const yearToggleHover =\n    'cursor-pointer hover:bg-gray-300 dark-hover:bg-gray-600';\n\n  // fetch repos for selected date\n  const dateKey = selectedDate.format(DATE_KEY_FORMAT);\n  const selectedHackernews = hackernewsDaily[dateKey];\n\n  return (\n    <div className=\"min-h-full\">\n      <div\n        className=\"p-2 text-center text-gray-800 dark:text-gray-300 mx-auto\"\n        style={{ width: 'max-content' }}>\n        Explore daily trending GitHub repositories from Hacker News on every day\n        since 2008.<br />Updated monthly.\n      </div>\n      <GlobalHotKeys\n        keyMap={keyMap}\n        handlers={handlers}\n        style={{ outline: 'none' }}\n      />\n      <ReactTooltip\n        effect=\"solid\"\n        className={`shadow ${Styles.tooltip}`}\n        offset={{ top: -6 }}\n      />\n\n      <div className=\"text-center text-gray-700 dark:text-gray-400 pb-6 pt-2\">\n        Pro tip: use&nbsp;\n        <div className={`${keyAesthetics}`} style={keyStyle}>\n          W\n        </div>\n        , &nbsp;\n        <div className={`${keyAesthetics}`} style={keyStyle}>\n          A\n        </div>\n        , &nbsp;\n        <div className={`${keyAesthetics}`} style={keyStyle}>\n          S\n        </div>\n        , and{' '}\n        <div className={`${keyAesthetics}`} style={keyStyle}>\n          D\n        </div>{' '}\n        to navigate the grid.\n      </div>\n\n      <div\n        className=\"rounded-lg shadow-xl bg-white dark:bg-gray-800 text-xl\"\n        style={{ width: 'max-content', margin: '0 auto' }}>\n        <div\n          className=\"flex justify-center items-center pt-4 pb-2 dark:text-gray-200\"\n          style={{ width: 'max-content', margin: '0 auto' }}>\n          <div\n            className={`${yearToggleStyle} ${\n              selectedYear > minYear ? yearToggleHover : 'text-transparent'\n            }`}\n            onClick={lastYear}>\n            <HiOutlineChevronLeft />\n          </div>\n          <div className=\"align-middle select-none mx-1 text-center shadow-inner py-1 px-2 rounded bg-gray-200 dark:bg-gray-700\">\n            {selectedYear}\n          </div>\n          <div\n            className={`${yearToggleStyle} ${\n              selectedYear < maxYear ? yearToggleHover : 'text-transparent'\n            }`}\n            onClick={nextYear}>\n            <HiOutlineChevronRight />\n          </div>\n        </div>\n        <div\n          className=\"flex p-1\"\n          style={{ width: 'max-content', margin: '0 auto' }}>\n          {datesByWeek.map((week, weekIndex) => (\n            <div className={`block`} key={weekIndex}>\n              {week.map((date, dateIndex) => {\n                const isSameDay = date.isSame(selectedDate, 'day');\n\n                const weekOfMonth =\n                  date.week() - moment(date).startOf('month').week() + 1;\n\n                return (\n                  <div\n                    className={`outer_grid relative`}\n                    style={{ padding: '2px' }}\n                    key={dateIndex}>\n                    <div\n                      className={`${\n                        date.year() === selectedYear\n                          ? 'cursor-pointer bg-gray-400 dark:bg-gray-600'\n                          : gridDisabled\n                      } ${gridSizing} ${gridTransition}`}\n                      style={{\n                        backgroundColor: isSameDay && '#f25d9c',\n                        opacity:\n                          date.format(DATE_KEY_FORMAT) in hackernewsDaily\n                            ? 1\n                            : 0.4,\n                      }}\n                      data-date={date}\n                      data-tip={\n                        date.year() === selectedYear\n                          ? date.format('MMMM Do, YYYY')\n                          : ''\n                      }\n                      onClick={\n                        date.year() === selectedYear ? gridClick : undefined\n                      }></div>\n                    {date.date() <= 7 &&\n                    (date.week() !== 1 || date.year() > selectedYear) ? (\n                      <div\n                        className={`bg-blue-400 dark:bg-orange-400 h-full inset-0`}\n                        style={{\n                          top: weekOfMonth === 1 ? '-1px' : '1px',\n                          position: 'absolute',\n                          width: '2px',\n                          marginLeft: '-1px',\n                        }}></div>\n                    ) : (\n                      ''\n                    )}\n                    {date.date() === 1 &&\n                    date.day() !== 0 &&\n                    !(weekIndex === 0 && dateIndex === 0) ? (\n                      <div\n                        className={`bg-blue-400 dark:bg-orange-400 w-full inset-0`}\n                        style={{\n                          position: 'absolute',\n                          height: '2px',\n                          marginTop: '-1px',\n                        }}></div>\n                    ) : (\n                      ''\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Slide\n        selectedDate={selectedDate}\n        absoluteEarliestDate={absoluteEarliestDate}\n        absoluteLatestDate={absoluteLatestDate}\n        yesterday={yesterday}\n        tomorrow={tomorrow}\n        selectedRepos={selectedHackernews}\n      />\n    </div>\n  );\n};\n\nexport default CalendarGrid;\n","import React from 'react';\n\nimport CalendarGrid from '../components/CalendarGrid';\n\nfunction Explore() {\n\treturn (\n\t\t<div className=\"min-h-full\">\n\t\t\t<CalendarGrid />\n\t\t</div>\n\t);\n}\n\nexport default Explore;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>404!</div>\n  );\n}\n\nexport default NotFound;","import React from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Import pages\nimport Explore from './pages/Explore';\nimport NotFound from './pages/NotFound';\n\n// Import dark mode\nimport { useDarkMode } from './components/DarkMode';\nimport DarkModeToggle from 'react-dark-mode-toggle';\n\n// Global css\nimport './App.css';\n\nfunction App() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  if (theme === 'dark') {\n    document.documentElement.classList.add('mode-dark');\n  } else {\n    document.documentElement.classList.remove('mode-dark');\n  }\n\n  if (!componentMounted) {\n    return <div />;\n  }\n\n  // general link hover style\n  const linkHover = `hover:text-blue-600 dark-hover:text-orange-500`;\n\n  return (\n    <Router>\n      <div\n        className=\"text-center w-screen pt-8 bg-gray-200 dark:bg-gray-700\"\n        style={{ marginBottom: '-1rem' }}>\n        <DarkModeToggle\n          onChange={toggleTheme}\n          checked={theme === 'dark'}\n          size={'3rem'}\n          speed={5}\n        />\n      </div>\n      <Switch>\n        {/* Public Routes */}\n        <Route exact path=\"/before\">\n          {<Explore />}\n        </Route>\n\n        {/* Catch-all Route */}\n        <Route path=\"/\">\n          <NotFound />\n        </Route>\n      </Switch>\n      <div className=\"text-center pb-12 text-gray-800 dark:text-gray-200\">\n        Made by{' '}\n        <a\n          className={`underline ${linkHover}`}\n          href=\"https://kevinhu.io\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          Kevin Hu\n        </a>\n        <br />\n        View{' '}\n        <a\n          className={`underline ${linkHover}`}\n          href=\"https://github.com/kevinhu/before\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">\n          source\n        </a>{' '}\n        on GitHub\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark')\n    } else {\n      setMode('light')\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme ?\n      setMode('dark') :\n      localTheme ?\n        setTheme(localTheme) :\n        setMode('light');\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted]\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cat-in-space.49a9f44e.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"CalendarGrid_tooltip__9ZcyM\"};"],"sourceRoot":""}
{"version":3,"sources":["assets/cat-in-space.svg","utils.js","components/Slide.js","components/CalendarGrid.js","components/WindowDimensionsProvider.js","pages/Explore.js","pages/NotFound.js","App.js","components/DarkMode.js","serviceWorker.js","webpack:///./src/index.js?b635"],"names":["module","exports","daysInYearByWeek","year","dates","startDate","endDate","currDate","moment","startOf","lastDate","add","diff","push","clone","enumerateDaysBetweenDates","toString","datesByWeek","week_","week_group","date","week","length","firstWeek","unshift","lastWeek","slice","Slide","selectedDate","setSelectedDate","absoluteEarliestDate","absoluteLatestDate","yesterday","tomorrow","selectedRepos","dayToggleStyle","dayToggleHover","linkHover","DateSelector","value","onClick","className","style","width","format","isAfter","height","selected","toDate","onChange","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","minDate","maxDate","customInput","popperPlacement","isBefore","map","repo","index","key","daily_rank","href","url","target","rel","title","objectID","points","alt","src","NoRepos","CalendarGrid","minYear","maxYear","gridClick","event","parseInt","dataset","yearToggleStyle","yearToggleHover","margin","weekIndex","dateIndex","isSameDay","isSame","weekOfMonth","padding","backgroundColor","opacity","hackernewsDaily","data-date","data-tip","undefined","top","position","marginLeft","day","marginTop","WindowDimensionsCtx","createContext","WindowDimensionsProvider","children","useState","window","innerWidth","innerHeight","dimensions","setDimensions","useEffect","handleResize","addEventListener","removeEventListener","Provider","DEFAULT_DATE","Explore","tooNarrow","useContext","history","useHistory","location","useLocation","params","queryString","parse","search","_setSelectedDate","selectedDateRef","React","useRef","current","isValid","parsedDate","month","incrementDay","increment","targetDate","handlers","TOMORROW","YESTERDAY","NEXT_WEEK","LAST_WEEK","keyAesthetics","keyStyle","dateKey","selectedHackernews","keyMap","outline","effect","offset","Fragment","NotFound","App","theme","setTheme","componentMounted","setComponentMounted","setMode","mode","localStorage","setItem","localTheme","getItem","matchMedia","matches","useDarkMode","toggleTheme","document","documentElement","classList","remove","loading","setLoading","marginBottom","checked","size","speed","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3745f9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat-in-space.49a9f44e.svg\";","import moment from 'moment';\n\n\nexport const enumerateDaysBetweenDates = (startDate, endDate) => {\n  let dates = [];\n\n  let currDate = moment(startDate).startOf('day');\n  let lastDate = moment(endDate).startOf('day');\n\n  while (currDate.add(1, 'days').diff(lastDate) < 0) {\n    dates.push(currDate.clone());\n  }\n\n  return dates;\n};\n\n\nexport const daysInYearByWeek = (year) => {\n  const DATE_FORMAT = 'YYYYMMDD';\n\n  let startDate = moment((year - 1).toString() + '1231', DATE_FORMAT);\n  let endDate = moment((year + 1).toString() + '0101', DATE_FORMAT);\n\n  let dates = enumerateDaysBetweenDates(startDate, endDate);\n\n  let datesByWeek = [];\n\n  let week_ = 1;\n  let week_group = [];\n\n  for (const date of dates) {\n    if (week_ !== date.week()) {\n      datesByWeek.push(week_group);\n      week_group = [];\n      week_ = date.week();\n    }\n    week_group.push(date);\n  }\n\n  if (week_group.length > 0) {\n    datesByWeek.push(week_group);\n  }\n\n  const firstWeek = datesByWeek[0];\n\n  while (firstWeek.length < 7) {\n    firstWeek.unshift(firstWeek[0].clone().add(-1, 'days'));\n  }\n\n  const lastWeek = datesByWeek.slice(-1)[0];\n\n  while (lastWeek.length < 7) {\n    lastWeek.push(lastWeek.slice(-1)[0].clone().add(1, 'days'));\n  }\n\n  return datesByWeek;\n};\n","import React from 'react';\n\nimport moment from 'moment';\n\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi';\nimport { FaHackerNewsSquare } from 'react-icons/fa';\n\nimport NoRepos from '../assets/cat-in-space.svg';\n\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Slide = ({\n\tselectedDate,\n\tsetSelectedDate,\n\tabsoluteEarliestDate,\n\tabsoluteLatestDate,\n\tyesterday,\n\ttomorrow,\n\tselectedRepos,\n}) => {\n\t// slide styles\n\tconst slideAesthetics = 'shadow-2xl bg-white rounded-lg px-8 py-6';\n\tconst slideDark = 'dark:bg-gray-800 dark:text-gray-200';\n\tconst slideTransition = 'transition ease-in duration-150';\n\tconst slideSizing = 'w-full sm:w-3/4 md:w-3/4 lg:w-3/4 xl:w-1/2';\n\n\t// day toggler styles\n\tconst dayToggleAesthetics = 'rounded p-2';\n\tconst dayTogglePosition = 'align-middle';\n\tconst dayToggleTransition = 'transition ease-in duration-200';\n\tconst dayToggleStyle = `${dayToggleAesthetics} ${dayTogglePosition} ${dayToggleTransition}`;\n\tconst dayToggleHover =\n\t\t'cursor-pointer hover:bg-gray-300 dark-hover:bg-gray-600';\n\n\t// general link hover style\n\tconst linkHover = `hover:text-blue-600 dark-hover:text-orange-500`;\n\n\t// date selector styles\n\tconst dateSelectorTransition = 'transition ease-in duration-150';\n\tconst dateSelectorAesthetics =\n\t\t'cursor-pointer select-none rounded text-gray-800 dark:text-gray-200 bg-gray-200 dark:bg-gray-700';\n\tconst dateSelectorPosition = 'mx-1 py-1 px-2 text-center align-middle';\n\tconst dateSelectorHover =\n\t\t'hover:shadow hover:bg-gray-300 dark-hover:bg-gray-600';\n\n\tconst DateSelector = ({ value, onClick }) => (\n\t\t<div\n\t\t\tclassName={`${dateSelectorTransition} ${dateSelectorAesthetics} ${dateSelectorPosition} ${dateSelectorHover}`}\n\t\t\tstyle={{ width: 'max-content' }}\n\t\t\tonClick={onClick}>\n\t\t\t{moment(value).format('MMMM Do, YYYY')}\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className=\"flex items-center justify-center w-screen pt-12 pb-12\">\n\t\t\t<div\n\t\t\t\tclassName={`max-w-screen-md ${slideAesthetics} ${slideDark} ${slideTransition} ${slideSizing}`}>\n\t\t\t\t<div className=\"flex justify-center items-center text-lg pb-3\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${dayToggleStyle} ${\n\t\t\t\t\t\t\tmoment(selectedDate).add(-1, 'days').isAfter(absoluteEarliestDate)\n\t\t\t\t\t\t\t\t? dayToggleHover\n\t\t\t\t\t\t\t\t: 'text-transparent'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tstyle={{ width: 'max-content', height: 'max-content' }}\n\t\t\t\t\t\tonClick={yesterday}>\n\t\t\t\t\t\t<HiOutlineChevronLeft />\n\t\t\t\t\t</div>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tselected={selectedDate.toDate()}\n\t\t\t\t\t\tonChange={(date) => setSelectedDate(moment(date))}\n\t\t\t\t\t\tpeekNextMonth\n\t\t\t\t\t\tshowMonthDropdown\n\t\t\t\t\t\tshowYearDropdown\n\t\t\t\t\t\tdropdownMode=\"select\"\n\t\t\t\t\t\tminDate={absoluteEarliestDate.clone().add(1, 'day').toDate()}\n\t\t\t\t\t\tmaxDate={absoluteLatestDate.clone().add(-1, 'day').toDate()}\n\t\t\t\t\t\tcustomInput={<DateSelector />}\n\t\t\t\t\t\tpopperPlacement=\"bottom-center\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`${dayToggleStyle} ${\n\t\t\t\t\t\t\tmoment(selectedDate).add(1, 'days').isBefore(absoluteLatestDate)\n\t\t\t\t\t\t\t\t? dayToggleHover\n\t\t\t\t\t\t\t\t: 'text-transparent'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tstyle={{ width: 'max-content', height: 'max-content' }}\n\t\t\t\t\t\tonClick={tomorrow}>\n\t\t\t\t\t\t<HiOutlineChevronRight />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{selectedRepos ? (\n\t\t\t\t\t\tselectedRepos.map((repo, index) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"flex py-2\" key={index}>\n\t\t\t\t\t\t\t\t\t<div className=\"w-1/12 select-none\">{repo.daily_rank}</div>\n\t\t\t\t\t\t\t\t\t<div className=\"w-5/6 mr-3\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${linkHover}`}\n\t\t\t\t\t\t\t\t\t\t\thref={repo.url}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t{repo.title}\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"w-1/12 mx-auto text-xl\">\n\t\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\t\tclassName={`w-1/4 ${linkHover}`}\n\t\t\t\t\t\t\t\t\t\t\thref={`https://news.ycombinator.com/item?id=${repo.objectID}`}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded border-solid border-2 border-gray-400 h-auto flex\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: 'fit-content' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FaHackerNewsSquare />\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"text-sm px-1\">{repo.points}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"text-center w-full\">\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\talt=\"No repos found.\"\n\t\t\t\t\t\t\t\tclassName=\"py-2 w-3/4 md:w-1/2 m-auto select-none\"\n\t\t\t\t\t\t\t\tsrc={NoRepos}></img>\n\t\t\t\t\t\t\t<div className=\"text-lg select-none mb-6\">No repos found.</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Slide;\n","import React from 'react';\n\nimport moment from 'moment';\n\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi';\n\nimport hackernewsDaily from '../assets/hackernews_github.json';\n\nconst DATE_KEY_FORMAT = 'YYYY-MM-DD';\n\nconst CalendarGrid = ({\n  selectedDate,\n  setSelectedDate,\n  minYear,\n  maxYear,\n  datesByWeek,\n}) => {\n  const lastYear = () => {\n    if (selectedDate.year() > minYear) {\n      setSelectedDate(selectedDate.clone().add(-1, 'years'));\n    }\n  };\n\n  const nextYear = () => {\n    if (selectedDate.year() < maxYear) {\n      setSelectedDate(selectedDate.clone().add(1, 'years'));\n    }\n  };\n\n  // change date on cell click\n  const gridClick = (event) => {\n    const date = moment(parseInt(event.target.dataset.date));\n\n    setSelectedDate(date.clone());\n  };\n\n  // year toggler styles\n  const yearToggleAesthetics = 'rounded p-2';\n  const yearTogglePosition = 'inline align-middle';\n  const yearToggleTransition = 'transition ease-in duration-200';\n  const yearToggleStyle = `${yearToggleAesthetics} ${yearTogglePosition} ${yearToggleTransition}`;\n  const yearToggleHover =\n    'cursor-pointer hover:bg-gray-300 dark-hover:bg-gray-600';\n\n  // grid styles\n  const gridSizing = 'w-4 h-4 rounded';\n  const gridTransition = 'transition ease-in duration-200';\n  const gridDisabled = 'bg-transparent cursor-default';\n\n  return (\n    <div\n      className=\"rounded-lg shadow-xl bg-white dark:bg-gray-800 text-xl\"\n      style={{ width: 'max-content', margin: '0 auto' }}>\n      <div\n        className=\"flex justify-center items-center pt-4 pb-2 dark:text-gray-200\"\n        style={{ width: 'max-content', margin: '0 auto' }}>\n        <div\n          className={`${yearToggleStyle} ${\n            selectedDate.year() > minYear ? yearToggleHover : 'text-transparent'\n          }`}\n          onClick={lastYear}>\n          <HiOutlineChevronLeft />\n        </div>\n        <div className=\"align-middle select-none mx-1 text-center shadow-inner py-1 px-2 rounded bg-gray-200 dark:bg-gray-700\">\n          {selectedDate.year()}\n        </div>\n        <div\n          className={`${yearToggleStyle} ${\n            selectedDate.year() < maxYear ? yearToggleHover : 'text-transparent'\n          }`}\n          onClick={nextYear}>\n          <HiOutlineChevronRight />\n        </div>\n      </div>\n      <div\n        className=\"flex p-1\"\n        style={{ width: 'max-content', margin: '0 auto' }}>\n        {datesByWeek.map((week, weekIndex) => (\n          <div className={`block`} key={weekIndex}>\n            {week.map((date, dateIndex) => {\n              const isSameDay = date.isSame(selectedDate, 'day');\n\n              const weekOfMonth =\n                date.week() - moment(date).startOf('month').week() + 1;\n\n              return (\n                <div\n                  className={`outer_grid relative`}\n                  style={{ padding: '2px' }}\n                  key={dateIndex}>\n                  <div\n                    className={`${\n                      date.year() === selectedDate.year()\n                        ? 'cursor-pointer bg-gray-400 dark:bg-gray-600'\n                        : gridDisabled\n                    } ${gridSizing} ${gridTransition}`}\n                    style={{\n                      backgroundColor: isSameDay && '#f25d9c',\n                      opacity:\n                        date.format(DATE_KEY_FORMAT) in hackernewsDaily\n                          ? 1\n                          : 0.4,\n                    }}\n                    data-date={date}\n                    data-tip={\n                      date.year() === selectedDate.year()\n                        ? date.format('MMMM Do, YYYY')\n                        : ''\n                    }\n                    onClick={\n                      date.year() === selectedDate.year()\n                        ? gridClick\n                        : undefined\n                    }></div>\n                  {date.date() <= 7 &&\n                  (date.week() !== 1 || date.year() > selectedDate.year()) ? (\n                    <div\n                      className={`bg-blue-400 dark:bg-orange-400 h-full inset-0`}\n                      style={{\n                        top: weekOfMonth === 1 ? '-1px' : '1px',\n                        position: 'absolute',\n                        width: '2px',\n                        marginLeft: '-1px',\n                      }}></div>\n                  ) : (\n                    ''\n                  )}\n                  {date.date() === 1 &&\n                  date.day() !== 0 &&\n                  !(weekIndex === 0 && dateIndex === 0) ? (\n                    <div\n                      className={`bg-blue-400 dark:bg-orange-400 w-full inset-0`}\n                      style={{\n                        position: 'absolute',\n                        height: '2px',\n                        marginTop: '-1px',\n                      }}></div>\n                  ) : (\n                    ''\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarGrid;\n","import React, { createContext, useContext, useState, useEffect } from 'react'\n\nconst WindowDimensionsCtx = createContext(null)\n\nconst WindowDimensionsProvider = ({ children }) => {\n  const [dimensions, setDimensions] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  })\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    return () => { window.removeEventListener('resize', handleResize) }\n  }, [])\n  return (\n    <WindowDimensionsCtx.Provider value={dimensions}>\n      {children}\n    </WindowDimensionsCtx.Provider>\n  )\n}\n\nexport default WindowDimensionsProvider\nexport const useWindowDimensions = () => useContext(WindowDimensionsCtx)\n","import React, { useState } from 'react';\nimport { GlobalHotKeys } from 'react-hotkeys';\nimport ReactTooltip from 'react-tooltip';\n\nimport { daysInYearByWeek } from '../utils';\n\nimport moment from 'moment';\n\nimport Slide from '../components/Slide';\nimport CalendarGrid from '../components/CalendarGrid';\nimport { useWindowDimensions } from '../components/WindowDimensionsProvider';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport queryString from 'query-string';\n\nimport hackernewsDaily from '../assets/hackernews_github.json';\n\nconst DATE_KEY_FORMAT = 'YYYY-MM-DD';\nconst DEFAULT_DATE = moment().startOf('month');\n\nfunction Explore() {\n\t// get screen dimensions\n\tconst { width } = useWindowDimensions();\n\n\t// if the calendar grid is too wide for the screen\n\tvar tooNarrow = width < 1080;\n\n\t// initialize url params\n\tlet history = useHistory();\n\tlet location = useLocation();\n\tlet params = queryString.parse(location.search);\n\n\t// year bounds\n\tconst minYear = 2008;\n\tconst maxYear = moment().year();\n\n\t// current date to display\n\tconst [selectedDate, _setSelectedDate] = useState(DEFAULT_DATE);\n\n\t// use ref to for handlers and URL\n\tconst selectedDateRef = React.useRef(selectedDate);\n\tconst setSelectedDate = (date) => {\n\t\tselectedDateRef.current = date;\n\t\t_setSelectedDate(date);\n\t\t\n\t\t// only update the url if the new date is different\n\t\t// otherwise, history breaks\n\t\tif (params.date !== date.format(DATE_KEY_FORMAT)) {\n\t\t\thistory.push(`/?date=${date.format(DATE_KEY_FORMAT)}`);\n\t\t}\n\t};\n\n\tif (params.date && moment(params.date, DATE_KEY_FORMAT).isValid()) {\n\t\tlet parsedDate = moment(params.date, DATE_KEY_FORMAT);\n\t\tif (!parsedDate.isSame(selectedDate)) {\n\t\t\tsetSelectedDate(parsedDate);\n\t\t}\n\t} else {\n\t\thistory.push(`/?date=${DEFAULT_DATE.format(DATE_KEY_FORMAT)}`);\n\t}\n\n\t// dates for grid\n\tlet datesByWeek = daysInYearByWeek(selectedDate.year());\n\n\t// absolute grid bounds\n\tlet absoluteEarliestDate = moment({ year: minYear - 1, month: 11, date: 31 });\n\tlet absoluteLatestDate = moment({ year: maxYear + 1, month: 0, date: 1 });\n\n\t// general date incrementer\n\tconst incrementDay = (increment) => {\n\t\tlet targetDate = selectedDateRef.current.clone();\n\n\t\ttargetDate.add(increment, 'days');\n\n\t\tif (\n\t\t\ttargetDate.isAfter(absoluteEarliestDate) &&\n\t\t\ttargetDate.isBefore(absoluteLatestDate)\n\t\t) {\n\t\t\tsetSelectedDate(targetDate);\n\t\t}\n\t};\n\n\t// date increments for keys\n\tconst tomorrow = () => {\n\t\tincrementDay(1);\n\t};\n\n\tconst nextWeek = () => {\n\t\tincrementDay(7);\n\t};\n\n\tconst yesterday = () => {\n\t\tincrementDay(-1);\n\t};\n\n\tconst prevWeek = () => {\n\t\tincrementDay(-7);\n\t};\n\n\tconst keyMap = {\n\t\tTOMORROW: ['s'],\n\t\tYESTERDAY: ['w'],\n\t\tNEXT_WEEK: ['d'],\n\t\tLAST_WEEK: ['a'],\n\t};\n\n\tconst handlers = {\n\t\tTOMORROW: tomorrow,\n\t\tYESTERDAY: yesterday,\n\t\tNEXT_WEEK: nextWeek,\n\t\tLAST_WEEK: prevWeek,\n\t};\n\n\t// key styles\n\tconst keyAesthetics =\n\t\t'inline text-center font-mono rounded pt-1 pb-1 px-2 shadow-sm text-xs bg-gray-400 dark:bg-gray-800';\n\tconst keyStyle = { width: 'max-content' };\n\n\tconst descriptionSizing =\n\t\t'max-w-full sm:max-w-full md:max-w-3/4 lg:max-w-3/4 xl:max-w-1/2';\n\n\t// fetch repos for selected date\n\tconst dateKey = selectedDate.format(DATE_KEY_FORMAT);\n\tconst selectedHackernews = hackernewsDaily[dateKey];\n\n\treturn (\n\t\t<div className=\"min-h-full\">\n\t\t\t<div className=\"min-h-full\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={`p-2 text-center text-gray-800 dark:text-gray-300 mx-auto ${descriptionSizing}`}\n\t\t\t\t\tstyle={{ width: 'max-content' }}>\n\t\t\t\t\tExplore daily trending GitHub repositories from Hacker News on every\n\t\t\t\t\tday since 2008. Updated monthly. Best when viewed on desktop.\n\t\t\t\t</div>\n\t\t\t\t<GlobalHotKeys\n\t\t\t\t\tkeyMap={keyMap}\n\t\t\t\t\thandlers={handlers}\n\t\t\t\t\tstyle={{ outline: 'none' }}\n\t\t\t\t/>\n\t\t\t\t<ReactTooltip\n\t\t\t\t\teffect=\"solid\"\n\t\t\t\t\tclassName={`shadow`}\n\t\t\t\t\tstyle={{ padding: '0.15rem 0.25rem' }}\n\t\t\t\t\toffset={{ top: -6 }}\n\t\t\t\t/>\n\n\t\t\t\t{!tooNarrow && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<div className=\"text-center text-gray-700 dark:text-gray-400 pb-6 pt-2\">\n\t\t\t\t\t\t\tPro tip: use&nbsp;\n\t\t\t\t\t\t\t<div className={`${keyAesthetics}`} style={keyStyle}>\n\t\t\t\t\t\t\t\tW\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t, &nbsp;\n\t\t\t\t\t\t\t<div className={`${keyAesthetics}`} style={keyStyle}>\n\t\t\t\t\t\t\t\tA\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t, &nbsp;\n\t\t\t\t\t\t\t<div className={`${keyAesthetics}`} style={keyStyle}>\n\t\t\t\t\t\t\t\tS\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t, and{' '}\n\t\t\t\t\t\t\t<div className={`${keyAesthetics}`} style={keyStyle}>\n\t\t\t\t\t\t\t\tD\n\t\t\t\t\t\t\t</div>{' '}\n\t\t\t\t\t\t\tto navigate the grid.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<CalendarGrid\n\t\t\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\t\t\tsetSelectedDate={setSelectedDate}\n\t\t\t\t\t\t\tminYear={minYear}\n\t\t\t\t\t\t\tmaxYear={maxYear}\n\t\t\t\t\t\t\tdatesByWeek={datesByWeek}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\n\t\t\t\t<Slide\n\t\t\t\t\tselectedDate={selectedDate}\n\t\t\t\t\tsetSelectedDate={setSelectedDate}\n\t\t\t\t\tabsoluteEarliestDate={absoluteEarliestDate}\n\t\t\t\t\tabsoluteLatestDate={absoluteLatestDate}\n\t\t\t\t\tyesterday={yesterday}\n\t\t\t\t\ttomorrow={tomorrow}\n\t\t\t\t\tselectedRepos={selectedHackernews}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Explore;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>404!</div>\n  );\n}\n\nexport default NotFound;","import React, { useEffect, useState } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// Import pages\nimport Explore from './pages/Explore';\nimport NotFound from './pages/NotFound';\n\n// Import dark mode\nimport { useDarkMode } from './components/DarkMode';\nimport DarkModeToggle from 'react-dark-mode-toggle';\n\n// Global css\nimport './App.css';\n\n// Window dimensions\nimport WindowDimensionsProvider from './components/WindowDimensionsProvider';\n\nfunction App() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  if (theme === 'dark') {\n    document.documentElement.classList.add('mode-dark');\n  } else {\n    document.documentElement.classList.remove('mode-dark');\n  }\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(false);\n  }, [setLoading]);\n\n  if (loading || !componentMounted) {\n    return <div />;\n  }\n\n  // general link hover style\n  const linkHover = `hover:text-blue-600 dark-hover:text-orange-500`;\n\n  return (\n    <Router>\n      <WindowDimensionsProvider>\n        <div\n          className=\"text-center w-screen pt-8 bg-gray-200 dark:bg-gray-700\"\n          style={{ marginBottom: '-1rem' }}>\n          <DarkModeToggle\n            onChange={toggleTheme}\n            checked={theme === 'dark'}\n            size={'3rem'}\n            speed={5}\n          />\n        </div>\n        <Switch>\n          {/* Public Routes */}\n          <Route exact path=\"/\">\n            {<Explore />}\n          </Route>\n\n          {/* Catch-all Route */}\n          <Route path=\"/\">\n            <NotFound />\n          </Route>\n        </Switch>\n        <div className=\"text-center pb-12 text-gray-800 dark:text-gray-200\">\n          Made by{' '}\n          <a\n            className={`underline ${linkHover}`}\n            href=\"https://kevinhu.io\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Kevin Hu\n          </a>\n          <br />\n          <a\n            className={`underline ${linkHover}`}\n            href=\"https://github.com/kevinhu/before\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n            Source\n          </a>{' '}\n          on GitHub\n        </div>\n      </WindowDimensionsProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const setMode = (mode) => {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark');\n    } else {\n      setMode('light');\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia &&\n    window.matchMedia('(prefers-color-scheme: dark)').matches &&\n    !localTheme\n      ? setMode('dark')\n      : localTheme\n      ? setTheme(localTheme)\n      : setMode('light');\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted];\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}